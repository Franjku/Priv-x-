name: Build Priv≈çx Binaries and Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libboost-all-dev \
          libssl-dev \
          libzmq3-dev \
          libunbound-dev \
          libsodium-dev \
          libunwind8-dev \
          liblzma-dev \
          libreadline6-dev \
          libldns-dev \
          libexpat1-dev \
          libpgm-dev \
          qttools5-dev-tools \
          libhidapi-dev \
          libusb-1.0-0-dev \
          libprotobuf-dev \
          protobuf-compiler \
          libudev-dev \
          libgcrypt20-dev \
          pkg-config
          
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Build Priv≈çx daemon and CLI tools
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j$(nproc) daemon
        make -j$(nproc) wallet-cli
        make -j$(nproc) wallet-rpc
        make -j$(nproc) blockchain-utilities
        
    - name: Create daemon package
      run: |
        mkdir -p privox-linux-daemon
        cp build/bin/privoxd privox-linux-daemon/
        cp build/bin/privox-wallet-cli privox-linux-daemon/
        cp build/bin/privox-wallet-rpc privox-linux-daemon/
        cp build/bin/privox-blockchain-* privox-linux-daemon/ || true
        cp README.md privox-linux-daemon/
        cp LAUNCH_COMMANDS.md privox-linux-daemon/
        tar -czf privox-linux-daemon.tar.gz privox-linux-daemon/
        
    - name: Upload daemon artifacts
      uses: actions/upload-artifact@v4
      with:
        name: privox-linux-daemon
        path: privox-linux-daemon.tar.gz

  build-gui:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout Priv≈çx GUI
      run: |
        git clone --recursive https://github.com/monero-project/monero-gui.git privox-gui
        cd privox-gui
        
    - name: Checkout Priv≈çx daemon code
      uses: actions/checkout@v4
      with:
        path: privox-daemon
        submodules: recursive
        
    - name: Install GUI dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libboost-all-dev \
          libssl-dev \
          libzmq3-dev \
          libunbound-dev \
          libsodium-dev \
          libunwind8-dev \
          liblzma-dev \
          libreadline6-dev \
          libldns-dev \
          libexpat1-dev \
          libpgm-dev \
          libhidapi-dev \
          libusb-1.0-0-dev \
          libprotobuf-dev \
          protobuf-compiler \
          libudev-dev \
          libgcrypt20-dev \
          pkg-config \
          qt5-default \
          qtdeclarative5-dev \
          qml-module-qtquick-controls \
          qml-module-qtquick-controls2 \
          qml-module-qtquick-dialogs \
          qml-module-qtquick-xmllistmodel \
          qml-module-qt-labs-settings \
          qml-module-qt-labs-folderlistmodel \
          qml-module-qtquick-templates2 \
          qttools5-dev-tools \
          qttools5-dev \
          libqt5svg5-dev
          
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Build Priv≈çx daemon for GUI
      run: |
        cd privox-daemon
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j$(nproc) daemon
        make -j$(nproc) wallet-cli
        make -j$(nproc) wallet-rpc
        
    - name: Customize GUI for Priv≈çx
      run: |
        cd privox-gui
        
        # Update application name and branding
        sed -i 's/Monero GUI/Priv≈çx GUI/g' main.qml || true
        sed -i 's/Monero/Priv≈çx/g' main.qml || true
        sed -i 's/monero/privox/g' CMakeLists.txt || true
        sed -i 's/Monero/Priv≈çx/g' CMakeLists.txt || true
        
        # Update network settings to match Priv≈çx
        find . -name "*.qml" -o -name "*.js" -o -name "*.cpp" -o -name "*.h" | xargs sed -i 's/18081/18236/g' || true
        find . -name "*.qml" -o -name "*.js" -o -name "*.cpp" -o -name "*.h" | xargs sed -i 's/28081/28236/g' || true
        
    - name: Build Priv≈çx GUI
      run: |
        cd privox-gui
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DMONERO_SOURCE_DIR=../../privox-daemon ..
        make -j$(nproc)
        
    - name: Create GUI package
      run: |
        mkdir -p privox-linux-gui
        cp privox-gui/build/bin/monero-wallet-gui privox-linux-gui/privox-wallet-gui || true
        cp privox-gui/build/privox-wallet-gui privox-linux-gui/ || true
        cp privox-daemon/build/bin/privoxd privox-linux-gui/
        cp privox-daemon/build/bin/privox-wallet-cli privox-linux-gui/
        cp privox-daemon/build/bin/privox-wallet-rpc privox-linux-gui/
        cp privox-daemon/README.md privox-linux-gui/
        cp privox-daemon/LAUNCH_COMMANDS.md privox-linux-gui/
        
        # Create launch script
        cat > privox-linux-gui/start-privox-gui.sh << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"
export LD_LIBRARY_PATH="$PWD:$LD_LIBRARY_PATH"
./privox-wallet-gui "$@"
EOF
        chmod +x privox-linux-gui/start-privox-gui.sh
        
        tar -czf privox-linux-gui.tar.gz privox-linux-gui/
        
    - name: Upload GUI artifacts
      uses: actions/upload-artifact@v4
      with:
        name: privox-linux-gui
        path: privox-linux-gui.tar.gz

  create-release:
    needs: [build-linux, build-gui]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download daemon artifacts
      uses: actions/download-artifact@v4
      with:
        name: privox-linux-daemon
        
    - name: Download GUI artifacts
      uses: actions/download-artifact@v4
      with:
        name: privox-linux-gui
        
    - name: Get release tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        release_name: Priv≈çx ${{ steps.get_tag.outputs.tag }}
        body: |
          # Priv≈çx ${{ steps.get_tag.outputs.tag }} Release
          
          ## üöÄ What's New
          - Complete Priv≈çx cryptocurrency implementation
          - 10M PVX premine with 6 decimal places
          - Full Monero privacy features
          - Separate mainnet and testnet networks
          
          ## üì¶ Downloads
          
          ### Linux Daemon & CLI Tools
          - **privox-linux-daemon.tar.gz** - Command-line daemon, wallet, and utilities
          - Includes: privoxd, privox-wallet-cli, privox-wallet-rpc, blockchain utilities
          
          ### Linux GUI Wallet  
          - **privox-linux-gui.tar.gz** - Graphical wallet interface
          - Includes: GUI wallet, daemon, and CLI tools
          
          ## üñ•Ô∏è Quick Start
          
          ### Daemon Only:
          ```bash
          tar -xzf privox-linux-daemon.tar.gz
          cd privox-linux-daemon
          ./privoxd --rpc-bind-port 18236 --p2p-bind-port 17236
          ```
          
          ### GUI Wallet:
          ```bash
          tar -xzf privox-linux-gui.tar.gz
          cd privox-linux-gui
          ./start-privox-gui.sh
          ```
          
          ## üîß Network Configuration
          - **Mainnet**: P2P 17236, RPC 18236, addresses start with "P"
          - **Testnet**: P2P 27236, RPC 28236, addresses start with "T"
          
          ## üí∞ Economic Parameters
          - Total Supply: 500M PVX
          - Decimals: 6
          - Block Reward: 120 PVX
          - Premine: 10M PVX
          
          **Status: Ready for production deployment!** üéâ
        draft: false
        prerelease: false
        
    - name: Upload daemon release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./privox-linux-daemon.tar.gz
        asset_name: privox-linux-daemon.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload GUI release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./privox-linux-gui.tar.gz
        asset_name: privox-linux-gui.tar.gz
        asset_content_type: application/gzip